{
    "swagger": "2.0",
    "info": {
        "description": "This is a account service - corebank.",
        "title": "Account Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:9090",
    "basePath": "/api",
    "paths": {
        "/account-migrate": {
            "post": {
                "description": "migrate account schema and the related tables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "migration"
                ],
                "summary": "migrate account schema",
                "parameters": [
                    {
                        "description": "key",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_database.MigrationKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_database.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "get all related accounts of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "get all account of user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "create bank account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "create bank account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "get account by id and all transaction histories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "get account and all payment histories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "get token from header fields (check docs for more details request example)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in to get token",
                "parameters": [
                    {
                        "description": "auth signin",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth-supertokens.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_auth-supertokens.AuthResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "register user (check docs for more details request example)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up user",
                "parameters": [
                    {
                        "description": "auth signup",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth-supertokens.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_auth-supertokens.AuthResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "create bank account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "create bank account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_user.User"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "internal_auth-supertokens.AuthRequest": {
            "type": "object",
            "properties": {
                "formFields": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "email"
                            },
                            "value": {
                                "type": "string",
                                "example": "email@mail.com"
                            }
                        }
                    }
                }
            }
        },
        "internal_auth-supertokens.AuthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/internal_auth-supertokens.User"
                }
            }
        },
        "internal_auth-supertokens.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeJoined": {
                    "type": "integer"
                }
            }
        },
        "internal_database.DefaultResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_database.MigrationKey": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "helloworld123"
                }
            }
        },
        "internal_user.User": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Account"
                    }
                },
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "model.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "closed_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AccountHistories"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "opened_at": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.AccountStatus"
                },
                "type": {
                    "$ref": "#/definitions/model.AccountType"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.AccountHistories": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "before_amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "final_amount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/model.TransactionOperation"
                }
            }
        },
        "model.AccountStatus": {
            "type": "string",
            "enum": [
                "active",
                "suspended",
                "closed"
            ],
            "x-enum-varnames": [
                "AccountActive",
                "AccountSuspended",
                "AccountClosed"
            ]
        },
        "model.AccountType": {
            "type": "string",
            "enum": [
                "savings",
                "checking"
            ],
            "x-enum-varnames": [
                "AccountSavings",
                "AccountChecking"
            ]
        },
        "model.TransactionOperation": {
            "type": "string",
            "enum": [
                "credit",
                "debit"
            ],
            "x-enum-varnames": [
                "OperationCredit",
                "OperationDebit"
            ]
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token (Get JWT from header signin st-access-token).",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "Supertokens Auth",
        "url": "https://app.swaggerhub.com/apis/supertokens/FDI"
    }
}